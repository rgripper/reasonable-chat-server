// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var ChatRepository$ReasonableChatServer = require("./ChatRepository.bs.js");

function processClientCommand(auth, clientCommand) {
  if (auth) {
    var user = auth[0];
    if (typeof clientCommand === "number") {
      ChatRepository$ReasonableChatServer.setUserAvailability(false, user[/* id */0]);
      return /* tuple */[
              /* Unauthenticated */0,
              /* UserUnavailable */Block.__(2, [user]),
              undefined
            ];
    } else if (clientCommand.tag) {
      return /* tuple */[
              /* Authenticated */[user],
              undefined,
              undefined
            ];
    } else {
      return /* tuple */[
              /* Authenticated */[user],
              /* MessagePublished */Block.__(3, [ChatRepository$ReasonableChatServer.addMessage(clientCommand[0], user[/* id */0])]),
              undefined
            ];
    }
  } else if (typeof clientCommand === "number" || !clientCommand.tag) {
    return /* tuple */[
            /* Unauthenticated */0,
            undefined,
            undefined
          ];
  } else {
    var user$1 = ChatRepository$ReasonableChatServer.getOrCreateUser(clientCommand[0]);
    ChatRepository$ReasonableChatServer.setUserAvailability(true, user$1[/* id */0]);
    return /* tuple */[
            /* Authenticated */[user$1],
            /* UserAvailable */Block.__(1, [user$1]),
            /* LoginSuccessful */Block.__(0, [
                ChatRepository$ReasonableChatServer.getState(/* () */0),
                user$1[/* id */0]
              ])
          ];
  }
}

exports.processClientCommand = processClientCommand;
/* No side effect */
